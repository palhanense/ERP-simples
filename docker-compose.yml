services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: erp
      POSTGRES_PASSWORD: "Eme02287523375"
      POSTGRES_DB: erp
    volumes:
      - erp-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./erp-backend
    environment:
      DATABASE_URL: "postgresql+psycopg://erp:Eme02287523375@db:5432/erp"
      DEV: "1"
      MEDIA_ROOT: "/app/data/product_photos"
      # JWT / auth settings - override in production
      SECRET_KEY: "change-me-in-env"
      ACCESS_TOKEN_EXPIRE_MINUTES: "60"
    depends_on:
      - db
    volumes:
      - ./erp-backend:/app:rw
      - ./erp-backend/data:/app/data:rw
    ports:
      - "8000:8000"
    # Run the entrypoint via bash to avoid exec/CRLF problems when the
    # host directory is bind-mounted into the container on Windows.
    # Bash will read the file even if the executable bit isn't preserved
    # by the Windows filesystem.
    command: ["/bin/bash", "/app/docker-entrypoint.sh"]

  frontend:
    build:
      context: ./erp-frontend
      dockerfile: Dockerfile.dev
    environment:
      # On Windows mounts sometimes need polling to pick up changes
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      - backend
    volumes:
      - ./erp-frontend:/app:rw
      # keep node_modules inside the container (anonymous volume) so host mount doesn't hide them
      - /app/node_modules
    ports:
      - "5173:5173"
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

volumes:
  erp-db-data:
